// Appveyor CI
if (System.env['APPVEYOR']) {
    version = System.env['APPVEYOR_BUILD_VERSION']
    exec {
        executable "git"
        args "config", "--global", "user.email", "love.tangzx@qq.com"
    }
    exec {
        executable "git"
        args "config", "--global", "user.name", "tangzx"
    }
}

def versions = [:]
versions["182"] = [
    ideaSDKVersion: "IC-182.2371.4",
    sinceBuild: "182",
    untilBuild: "183.*",
    archiveName: "IntelliJ-EmmyLua",
    patchs: []
]
versions["172"] = [
    ideaSDKVersion: "IC-172.4574.19",
    sinceBuild: "172",
    untilBuild: "181.*",
    archiveName: "IntelliJ-EmmyLua",
    patchs: [
        "patchs/172/0002-Revert-redesigned-documentation.patch",
        "patchs/172/0001-compatible-with-171-172.patch"
    ] + versions["182"].patchs
]
versions["171"] = [
    ideaSDKVersion: "IC-171.4694.73",
    sinceBuild: "171",
    untilBuild: "171.*",
    archiveName: "IntelliJ-EmmyLua",
    patchs: [
        "patchs/171/0001-compatible-with-171.patch",
        "patchs/171/0002-compatible-with-171.patch"
    ] + versions["172"].patchs
]

ext {
    getRev = {
        def os = new ByteArrayOutputStream()
        def e = exec {
            executable "git"
            args "rev-parse"
            args "HEAD"
            standardOutput = os
        }
        return os.toString().substring(0, 7)
    }

    setDefaultProperty = { name, defaultValue ->
        if (!this.hasProperty(name))
            ext[name] = defaultValue
    }

    getVersionCfg = { shortVer ->
        return versions[shortVer]
    }
}
